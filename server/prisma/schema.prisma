// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  AUTHOR
}

enum Status {
  ACTIVE
  INACTIVE
  FREEZE
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  content   String?
  published Boolean  @default(false)
  authorId  Int
  User      User     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  User   User    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id              Int      @id @default(autoincrement())
  firstName       String?  @db.VarChar(52)
  lastName        String   @unique @db.VarChar(52)
  phone           String
  email           String   @unique @db.VarChar(52)
  role            Role     @default(USER)
  status          Status   @default(ACTIVE)
  lastLogin       DateTime
  errorLoginCount Int      @default(0) @db.SmallInt
  randToken       String
  image           String?
  createdAt       DateTime @default(now())
  updateAt        DateTime @updatedAt
  Post            Post[]
  Profile         Profile?
}
